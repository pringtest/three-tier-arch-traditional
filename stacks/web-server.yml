AWSTemplateFormatVersion: '2010-09-09'
Description: 'web-server'

Parameters:
  Project:
    Type: String
  NodeEnv:
    Type: String
  PublicSubnet01Id:
    Type: String
  VPCId:
    Type: String

Resources:
  # create security group for web server instance
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web Server Security Group
      VpcId: !Ref VPCId
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        # - IpProtocol: tcp
        #   FromPort: 3000
        #   ToPort: 3000
        #   CidrIp: 0.0.0.0/0

  # Create launch template for ec2 web server
  Ec2LaunchTemplate:
    DependsOn:
      - WebServerSecurityGroup
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub '${NodeEnv}-${Project}-web-server-template'
      LaunchTemplateData:
        ImageId: ami-055d15d9cfddf7bd3 # Ubuntu Server 20.04 LTS (HVM), SSD Volume Type
        InstanceType: t2.micro
        KeyName: tuto # keypair need to create from console
        NetworkInterfaces:
          - AssociatePublicIpAddress: true # change to false if use bastion host
            DeleteOnTermination: true
            DeviceIndex: 0
            Groups: 
              - !GetAtt WebServerSecurityGroup.GroupId
            SubnetId: !Ref PublicSubnet01Id
        BlockDeviceMappings: 
          - DeviceName: /dev/xvda
            Ebs: 
              DeleteOnTermination: true
              Encrypted: false
              VolumeSize: 30
              VolumeType: gp2
        TagSpecifications:      
          - ResourceType: instance
            Tags: 
              - Key: Name
                Value: !Sub '${NodeEnv}-${Project}-web-server'
  
  # create instance
  Ec2Instance:
    DependsOn:
      - Ec2LaunchTemplate
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate: 
        LaunchTemplateId: !Ref Ec2LaunchTemplate
        Version: !GetAtt Ec2LaunchTemplate.LatestVersionNumber
  
  # create target group
  TargetGroupWebApp:
    DependsOn:
      - Ec2Instance
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPCId
      Port: 80
      Protocol: TCP
      TargetType: instance
      Targets: 
        - Id: !Ref Ec2Instance
          Port: 80

  # create load balancer
  NLBWebApp:
    DependsOn:
      - Ec2Instance
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Type: network
      IpAddressType: ipv4
      Scheme: internet-facing
      Subnets: 
        - !Ref PublicSubnet01Id
  
  # create load balancer listener
  NLBListener:
    DependsOn:
      - NLBWebApp
      - TargetGroupWebApp
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
        - TargetGroupArn: !Ref TargetGroupWebApp
          Type: forward
      LoadBalancerArn: !Ref NLBWebApp
      Port: 80
      Protocol: TCP
